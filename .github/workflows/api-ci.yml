name: API & CSV Validation CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  validate-csv:
    name: Validate CSV files
    runs-on: ubuntu-latest
   steps:
      - name: Checkout repo & tests
        uses: actions/checkout@v3

      - name: Checkout practice-software-testing repo
        uses: actions/checkout@v3
        with:
          repository: testsmith-io/practice-software-testing
          path: practice-software-testing
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & start Docker Compose
        working-directory: practice-software-testing
        run: |
          docker compose -f docker-compose.yml up -d --build \
            || docker-compose -f docker-compose.yml up -d --build

      - name: Fix file & folder permissions for Laravel
        working-directory: practice-software-testing
        run: |
          # Cho phép Laravel container ghi .env và storage/cache
          chmod 777 .env
          chmod -R 777 storage bootstrap/cache

      - name: Setup Laravel environment
        working-directory: practice-software-testing
        run: |
          # Override DB_HOST nếu cần
          sed -i 's/^DB_HOST=.*/DB_HOST=mysql/' .env
          # Sinh key
          docker compose exec -T laravel-api php artisan key:generate --ansi

      - name: Wait for Database to be ready
        working-directory: practice-software-testing
        run: |
          until docker compose exec -T mysql mysqladmin ping -h"localhost" --silent; do
            echo "Waiting for MySQL…"
            sleep 2
          done

      - name: Migrate & seed database
        working-directory: practice-software-testing
        run: |
          docker compose exec -T laravel-api php artisan migrate:fresh --seed --ansi

      - name: Fix storage permission & ensure logs dir
        working-directory: practice-software-testing
        run: |
          docker compose exec -T laravel-api mkdir -p storage/logs
          docker compose exec -T laravel-api chmod -R 777 storage bootstrap/cache

          
      - name: Run Postman collection
        working-directory: practice-software-testing
        run: |
          mkdir -p results
          newman run ./tests/postman/YourCollection.postman_collection.json \
            --iteration-data ./tests/data/users.csv \
            --reporters cli,junit \
            --reporter-junit-export results/register.xml \
            --environment ./tests/postman/env.json

      - name: Upload Postman results
        uses: actions/upload-artifact@v4
        with:
          name: postman-results
          path: practice-software-testing/results/
