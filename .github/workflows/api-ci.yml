name: API & CSV Validation CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  validate-csv:
    name: Validate CSV files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout CSV & tests
        uses: actions/checkout@v3

      - name: Validate CSV headers & empty rows
        run: |
          for f in *.csv; do
            echo "üîç Checking $f"
            hdr=$(head -n1 "$f" | tr -d '\r')
            awk '/^$/ {print "‚ùå Empty line in '"$f"'"; exit 1}' "$f"
          done

  postman-tests:
    name: Spin up App & Run Postman Tests (data-driven)
    needs: validate-csv
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo & tests
        uses: actions/checkout@v3

      - name: Checkout practice-software-testing repo
        uses: actions/checkout@v3
        with:
          repository: testsmith-io/practice-software-testing
          path: practice-software-testing
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & start Docker Compose
        working-directory: practice-software-testing
        run: |
          docker compose -f docker-compose.yml up -d --build \
            || docker-compose -f docker-compose.yml up -d --build

      - name: Install PHP dependencies
        working-directory: practice-software-testing
        run: |
          set -euxo pipefail
          docker compose run --rm composer clear-cache || true
          for i in 1 2 3; do
            docker compose run --rm composer install \
              --no-dev \
              --optimize-autoloader \
              --ignore-platform-req=ext-ffi \
              --prefer-source && break
            echo "‚ö†Ô∏è  Composer install failed (attempt $i), retrying in 5s‚Ä¶"
            sleep 5
          done

      - name: Migrate & seed database
        working-directory: practice-software-testing
        run: |
          docker compose exec -T laravel-api php artisan migrate:fresh --seed

      - name: Wait for API to be ready
        run: |
          for i in {1..20}; do
            nc -z localhost 8000 && { echo "‚úÖ API is up!"; exit 0; }
            echo "‚è≥ Waiting for API (attempt $i)‚Ä¶"
            sleep 3
          done
          echo "‚ùå API failed to start. Showing last logs:"
          docker compose -f practice-software-testing/docker-compose.yml logs laravel-api --tail=50
          exit 1

      - name: Install Postman CLI
        run: curl -sL https://dl-cli.pstmn.io/install/linux64.sh | sh

      - name: Postman login
        env:
          POSTMAN_API_KEY: ${{ secrets.POSTMAN_API_KEY }}
        run: postman login --with-api-key "$POSTMAN_API_KEY"

      - name: Run Register Collection (data-driven)
        run: |
          mkdir -p results
          postman collection run Register.postman_collection.json \
            --environment HW07.postman_environment.json \
            --iteration-data register-data.csv \
            --global-var "base_url=http://localhost:8000/api" \
            --reporters cli,junit \
            --reporter-junit-export results/register.xml

      - name: Run Login Collection (data-driven)
        run: |
          postman collection run Login.postman_collection.json \
            --environment HW07.postman_environment.json \
            --iteration-data login-data.csv \
            --global-var "base_url=http://localhost:8000/api" \
            --reporters cli,junit \
            --reporter-junit-export results/login.xml

      - name: Run Forgot Password Collection (data-driven)
        run: |
          postman collection run "Forget password.postman_collection.json" \
            --environment HW07.postman_environment.json \
            --iteration-data forgot-password-data.csv \
            --global-var "base_url=http://localhost:8000/api" \
            --reporters cli,junit \
            --reporter-junit-export results/forgot-password.xml

      - name: Upload JUnit reports
        uses: actions/upload-artifact@v4
        with:
          name: api-test-reports
          path: results/*.xml
