name: API & CSV Validation CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  validate-csv:
    name: Validate CSV files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout CSV & tests
        uses: actions/checkout@v3

      - name: Validate CSV headers & empty rows
        run: |
          for f in *.csv; do
            echo "üîç Checking $f"
            hdr=$(head -n1 "$f" | tr -d '\r')
            awk '/^$/ {print "‚ùå Empty line in '"$f"'"; exit 1}' "$f"
          done

  postman-tests:
    name: Spin up App & Run Postman Tests (data-driven)
    needs: validate-csv
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo & tests
        uses: actions/checkout@v3

      - name: Checkout practice-software-testing repo
        uses: actions/checkout@v3
        with:
          repository: testsmith-io/practice-software-testing
          path: practice-software-testing
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & start Docker Compose
        working-directory: practice-software-testing
        run: |
          docker compose -f docker-compose.yml up -d --build \
            || docker-compose -f docker-compose.yml up -d --build

      - name: Setup Laravel environment file
        working-directory: practice-software-testing
        run: |
          # N·∫øu .env.example c√≥ s·∫µn, copy; n·∫øu .env ƒë√£ c√≥ s·∫µn th√¨ th√¥i
          if [ -f .env.example ]; then cp .env.example .env; fi
          # Override DB_HOST th√†nh t√™n service trong docker-compose
          sed -i 's/DB_HOST=.*/DB_HOST=mysql/' .env
          # Sinh APP_KEY n·∫øu ch∆∞a c√≥
          docker compose exec -T laravel-api php artisan key:generate --ansi

      - name: Wait for Database to be ready
        working-directory: practice-software-testing
        run: |
          echo "‚è≥ Waiting for MySQL to accept connections‚Ä¶"
          until docker compose exec -T mysql mysqladmin ping -h"localhost" --silent; do
            echo "   Still waiting‚Ä¶"
            sleep 2
          done

      - name: Migrate & seed database
        working-directory: practice-software-testing
        run: |
          docker compose exec -T laravel-api php artisan migrate:fresh --seed --ansi

      - name: Fix storage permission & ensure logs dir
        working-directory: practice-software-testing
        run: |
          docker compose exec -T laravel-api mkdir -p storage/logs
          docker compose exec -T laravel-api chmod -R 777 storage bootstrap/cache

      - name: Install PHP dependencies
        working-directory: practice-software-testing
        run: |
          set -euxo pipefail
          docker compose run --rm composer clear-cache || true
          for i in 1 2 3; do
            docker compose run --rm composer install \
              --no-dev \
              --optimize-autoloader \
              --ignore-platform-req=ext-ffi \
              --prefer-source && break
            echo "‚ö†Ô∏è  Composer install failed (attempt $i), retrying in 5s‚Ä¶"
            sleep 5
          done

      - name: Run Postman collection
        working-directory: practice-software-testing
        run: |
          mkdir -p results
          newman run ./tests/postman/YourCollection.postman_collection.json \
            --iteration-data ./tests/data/users.csv \
            --reporters cli,junit \
            --reporter-junit-export results/register.xml \
            --environment ./tests/postman/env.json

      - name: Upload Postman results
        uses: actions/upload-artifact@v4
        with:
          name: postman-results
          path: practice-software-testing/results/

