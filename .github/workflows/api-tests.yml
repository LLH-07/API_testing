name: CI · Postman API Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  postman-tests:
    runs-on: ubuntu-latest

    steps:
      # 1) Grab your code (tests + API)
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2) Install your API’s dependencies
      #    ← adjust if you’re on Python/Ruby/Go, etc.
      - name: Install API dependencies
        working-directory: ./api            # ← change to where your server code lives
        run: npm ci                         # ← or pip install -r requirements.txt

      # 3) Start your server in the background
      - name: Start API server
        working-directory: ./api
        run: |
          npm start -- --port 8091 &       # ← replace with your actual start command
      # 4) Wait until it’s responding
      - name: Wait for API to be live
        run: |
          npm install -g wait-on
          wait-on http://localhost:8091/api/health  # ← or base_url + "/users/login", etc.

      # 5) Install Postman CLI
      - name: Install Postman CLI
        run: |
          curl -sL https://dl-cli.pstmn.io/install/linux64.sh | bash

      # 6) Authenticate to Postman
      - name: Login to Postman CLI
        run: postman login --with-api-key ${{ secrets.POSTMAN_API_KEY }}

      # 7) Make a reports folder
      - name: Create reports directory
        run: mkdir -p reports

      # 8) Run your 3 collections
      - name: Run Login tests
        run: |
          postman collection run \
            Login.postman_collection.json \
            -e HW07.postman_environment.json \
            --iteration-data login-data.csv \
            --reporters cli,junit \
            --reporter-junit-export reports/login-results.xml

      - name: Run Register tests
        run: |
          postman collection run \
            Register.postman_collection.json \
            -e HW07.postman_environment.json \
            --iteration-data register-data.csv \
            --reporters cli,junit \
            --reporter-junit-export reports/register-results.xml

      - name: Run Forgot Password tests
        run: |
          postman collection run \
            "Forget password.postman_collection.json" \
            -e HW07.postman_environment.json \
            --iteration-data forgot-password-data.csv \
            --reporters cli,junit \
            --reporter-junit-export reports/forgot-password-results.xml

      # 9) Upload JUnit XMLs as artifacts
      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: postman-junit-reports
          path: reports/*.xml
